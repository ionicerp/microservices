apiVersion: v1
kind: Service
metadata:
  name: account-service
spec:
  ports:
  - port: 3030
    protocol: TCP
    targetPort: 3030
  selector:
    app: account
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: product-service
spec:
  ports:
  - port: 3035
    protocol: TCP
    targetPort: 3035
  selector:
    app: product
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: account
spec:
  replicas: 1
  selector:
    matchLabels:
      app: account
  template:
    metadata:
      labels:
        app: account
    spec:
      containers:
      - env:
        - name: PORT
          value: "3030"
        image: us-central1-docker.pkg.dev/com-b2allsolution-autolive/microservices/account:latest
        imagePullPolicy: Always
        name: server
        ports:
        - containerPort: 3030
      imagePullSecrets:
      - name: artifact-registry
      serviceAccountName: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: product
spec:
  replicas: 1
  selector:
    matchLabels:
      app: product
  template:
    metadata:
      labels:
        app: product
    spec:
      containers:
      - env:
        - name: PORT
          value: "3035"
        image: us-central1-docker.pkg.dev/com-b2allsolution-autolive/microservices/product:latest
        imagePullPolicy: Always
        name: server
        ports:
        - containerPort: 3035
      imagePullSecrets:
      - name: artifact-registry
      serviceAccountName: default
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
  name: ingress-external
spec:
  ingressClassName: nginx
  rules:
  - http:
      paths:
      - backend:
          service:
            name: account-service
            port:
              number: 3030
        path: /account(/|$)(.*)
        pathType: Prefix
      - backend:
          service:
            name: product-service
            port:
              number: 3035
        path: /product(/|$)(.*)
        pathType: Prefix
---
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  annotations:
    nginx.ingressclass.kubernetes.io/is-default-class: "true"
  labels:
    app.kubernetes.io/component: controller
  name: nginx
spec:
  controller: k8s.io/ingress-nginx
